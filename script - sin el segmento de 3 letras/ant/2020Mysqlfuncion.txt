CREATE DEFINER=`root`@`localhost` FUNCTION `fnDevuelveCondicion`(
	`Campo` VARCHAR(50),
	`Valor` VARCHAR(50)
)
RETURNS varchar(250) CHARSET utf8mb4
LANGUAGE SQL
NOT DETERMINISTIC
CONTAINS SQL
SQL SECURITY DEFINER
COMMENT ''
BEGIN
DECLARE Condicion VARCHAR(750);
SET Campo= replace(Campo,'''','');
SET Valor= replace(Valor,'''','');
#consultamos un where
	IF(Substring(Valor,1, 1) <>'.')	THEN
		SET Condicion=' WHERE ';
	ELSE
		IF(Substring(Valor,2, 1) =',')	THEN
			SET Condicion=' OR ';
			SET Valor=Substring(Valor,3,LENGTH(Valor));
		
		ELSE
			SET Condicion=' AND ';
			SET Valor=Substring(Valor,2,LENGTH(Valor));
		END IF;
	END IF;
#preguntas
	IF (Substring(Campo,1, 1) = 'C') THEN
      SET Condicion = CONCAT(Condicion, '' , Substring(Campo,2, LENGTH(Campo)) , ' like ','''','%',Valor,'%','''');
   END IF;
   
   IF (Substring(Campo,1, 1) = '(')  THEN
      SET Condicion = CONCAT(Condicion , '(' , Substring(Campo,2, LENGTH(Campo)) , ' like ' , '''' , '%' , Valor , '%' , '''');
   END if;
   
	IF (Substring(Campo,1, 1) = ')')  then
      SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' like ' , '''' , '%' , Valor , '%' , '''',')');
   END if;
   IF (Substring(Campo,1, 1) = 'I')  then
      SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' like ' , '''' , Valor , '%' , '''');
   END IF;
   
   IF (Substring(Campo,1, 1) = 'N') then
		IF(IsNumeric(Valor)=1) then
			  IF(Valor='0') then
				SET Condicion = '';
			  else
				SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' = ' , Valor );
			  END if;
		ELSE
		  SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' = 0' );
		END if;
   END if;
   
    IF (Substring(Campo,1, 1) = 'D')  then
    	IF(STR_TO_DATE((Valor), '%d,%m,%Y') IS NOT NULL) then
			SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' = ' , '''' ,  Valor ,  ''''    );
		else
			SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' = ' , '''' ,  '01/01/1990' ,  '''' );
		END if;   
    END if;
	if (Substring(Campo,1, 1) = 'T')  then
      SET Condicion = ''  ;
   END if;
   
    if (Substring(Campo,1, 1) = 'L')  then
      SET Condicion = CONCAT(Condicion ,  '' ,  Substring(Campo,2, LENGTH(Campo)) , ' = ' , '''' ,  Valor ,  ''''   );
		END if ;         
	if (Substring(Campo,1, 1) = 'P') then
      SET Condicion = CONCAT(Condicion ,   Substring(Campo,2, LENGTH(Campo)) , ' = '  ,  Valor    ); 
		END if;          
    if (Substring(Campo,1, 1) = 'E')  then
      SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' <> ' , '''' ,  Valor ,  ''''    );
		END if;          
	if (Substring(Campo,1, 1) = 'O')  then
      SET Condicion = CONCAT(' order by ' , Substring(Campo,2, LENGTH(Campo)) , ' ' , Valor);
      END if;
    if (Substring(Campo,1, 1) = 'Z')  then
      SET Condicion = CONCAT(Condicion , 'Substring(' , Substring(Campo,2, LENGTH(Campo)) , ',2, LENGTH(' , Substring(Campo,2, LENGTH(Campo)), ')) = ' ,   Valor  ) ;
		END if;           
    if (Substring(Campo,1, 1) = '>')  then
      SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' >= convert(datetime,' , '''' ,  Valor ,  ''''   ,', 103)'   );
		END if;          
    if (Substring(Campo,1, 1) = '<')  then
      SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' <= convert(datetime,' , '''' ,  Valor ,  '''' ,', 103)') ;
		END IF;            
    if (Substring(Campo,1, 1) = 'M')  then
      SET Condicion = CONCAT(Condicion , 'month(' , Substring(Campo,2, LENGTH(Campo)) , ') = ' , '''' ,  Valor ,  '''' ) ;
      END IF;
    if (Substring(Campo,1, 1) = 'A')  then
      SET Condicion = CONCAT(Condicion , 'year(' , Substring(Campo,2, LENGTH(Campo)) , ') = ' , '''' ,  Valor ,  '''' ) ;
      END IF;
    if (Substring(Campo,1, 1) = 'B')  then
      SET Condicion = CONCAT(Condicion , '' , Substring(Campo,2, LENGTH(Campo)) , ' in (' ,  Valor ,  ')' );
      END IF;
      
#retornamos valor
RETURN Condicion;
END




CREATE DEFINER=`root`@`localhost` FUNCTION `IsNumeric`(
	`sIn` varchar(1024)
)
RETURNS tinyint(4)
LANGUAGE SQL
NOT DETERMINISTIC
CONTAINS SQL
SQL SECURITY DEFINER
COMMENT ''
return sIn REGEXP '^(-|\\+){0,1}([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+|[0-9]+)$'