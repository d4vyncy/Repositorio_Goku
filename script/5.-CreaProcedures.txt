
--metodos para adicionar 15122016

declare @var_id as int 
declare @var_name as varchar (50)
declare @var_name_campo as varchar (50)
declare @var_long as varchar (50)
declare @var_AUX as varchar (50)
declare @var_cadena as varchar (8000)
declare @var_cadena_i as varchar (8000)
declare @var_cadena_pe as varchar (8000)
declare @var_cadena_pe2 as varchar (8000)
declare @var_cadena_pe2_i as varchar (8000)
declare @var_cadena_pe2_d as varchar (8000)
declare @var_cadena_pe3 as varchar (8000)
declare @var_cadena_pe3_i as varchar (8000)
declare @var_name_xtype as varchar (50)
declare @var_length as int
declare @var_contador as int
declare @cadena_respuesta varchar (8000)
declare @cadena_respuesta1 varchar (8000)
declare @var_nombretabla as varchar (50)
DECLARE tablas_Cursor CURSOR FOR

SELECT name, id FROM sysobjects where xtype= 'U' and name <> 'dtproperties' AND NAME <> 'sysdiagrams' and name not like 'TEMPORAL%' and  name not like 'trnTemp%' AND NAME != 'resultados' order by name--solo por lo de la base venecia
OPEN tablas_Cursor
FETCH NEXT FROM tablas_Cursor into @var_name, @var_id

WHILE @@FETCH_STATUS = 0
BEGIN
	
		--print 'IF EXISTS(SELECT name FROM sysobjects WHERE name = ' +''''  + 'pag'+ @var_name  + ''''  + ' AND type = ' + ''''  + 'P' +''''  + ')'
		if substring(@var_name, 1, 5) ='segcl'
		begin
		--print 'DROP PROCEDURE IF EXISTS pcru' + substring(@var_name, 6, len(@var_name)) + ';'
			print ''
			print 'DELIMITER $$'
			 print 'CREATE PROCEDURE pcru' + substring(@var_name, 6, len(@var_name)) 
			 set @var_nombretabla=substring(@var_name, 6, len(@var_name)) 
		end
		else
		begin
		--print 'DROP PROCEDURE IF EXISTS pcru' + substring(@var_name, 7, len(@var_name)) + ';'
			print ''
			print 'DELIMITER $$'
			 print 'CREATE PROCEDURE pcru' + substring(@var_name, 7, len(@var_name)) 
			  set @var_nombretabla=substring(@var_name, 7, len(@var_name)) 
		end
	
	set @var_cadena = ''
	set @var_cadena_i = ''
	set @var_cadena_pe = ''
	set @var_cadena_pe2 = ''
	set @var_cadena_pe2_i = ''
	set @var_cadena_pe3_i = ''
	set @var_cadena_pe3 = ''
	set @var_contador = 1
	DECLARE campos_Cursor CURSOR FOR
	select a.name, b.name, a.length from syscolumns a, systypes b where a.xtype = b.xtype and a.id = @var_id  and b.name<>'sysname' and a.name not in ('FechaRegistro','EstadoRegistro')  and  a.name not like 'trnTemp%' order by a.colid
	OPEN campos_Cursor
	FETCH NEXT FROM campos_Cursor into @var_name_campo, @var_name_xtype, @var_length
	WHILE @@FETCH_STATUS = 0
	BEGIN
		set @var_long = ''
		IF(@var_name_xtype = 'varchar')
		begin
			set @var_long = '('+cast(@var_length as varchar(50))+')'
		end
		IF(@var_name_xtype = 'DECIMAL')
		begin
			set @var_long = '(18,13)'
		end
		IF(@var_name_xtype = 'nvarchar')
		begin
			set @var_long = '('+cast(@var_length/2 as varchar(50))+')'
		end
		IF(@var_name_xtype = 'char')
		begin
			set @var_long = '('+cast(@var_length as varchar(50))+')'
		end
		IF(@var_long = '(0)')
		begin
			set @var_long = '(max)'
		end
		IF(@var_long = '(-1)')
		begin
			set @var_long = '(max)'
		end
		IF(@var_name_xtype = 'nvarchar')
			begin
				set @var_long = '('+cast(@var_length as varchar(500))+')'
				set @var_name_xtype = 'varchar'
			end
			IF(@var_name_xtype = 'image')
			begin
				set @var_name_xtype = 'blob'
			end
			IF(@var_name_xtype = 'money')
			begin
				set @var_name_xtype = 'decimal'
			end
			IF(@var_name_xtype = 'char')
			begin
				set @var_long = '('+cast(@var_length as varchar(500))+')'
			end	
		SET @VAR_AUX = ' = NULL'
		set @var_cadena_pe = @var_cadena_pe +', '+ 'IN p' + @var_name_campo +' '+upper( @var_name_xtype+ @var_long) --+ @var_aux)   -- declara parametros
		if  (@var_contador = 1) 
		begin
			set @var_cadena_pe = @var_cadena_pe --+ ' output'  -- PARAMETRO D SALIDA
			if substring(@var_name, 1, 2) in ('cl','tr')
			begin
				set @cadena_respuesta = 'SELECT p' + @var_name_campo + ' = (ISNULL(MAX(' + @var_name_campo + ') + 1,1)) FROM ' + @var_name
			end
			else
			begin
				set @cadena_respuesta = 'SELECT p' + @var_name_campo + ' = (ISNULL(MAX(' + @var_name_campo + ') + 1,SUBSTRING(cast(p' + @var_name_campo + ' as CHAR),0,3)+'+ ''''+ '0000001' +'''' +')) FROM ' + @var_name + ' WHERE SUBSTRING(cast(' + @var_name_campo + ' as CHAR),0,3) = SUBSTRING(cast(@' + @var_name_campo + ' as CHAR),0,3)' + ' AND LEN(' + @var_name_campo + ')>7' 
			end
			--SELECT @pIdOrganigramaEntidad = (ISNULL(MAX(IdOrganigramaEntidad) + 1,SAC.dbo.fnDevuelveIdBase())) FROM trnOrganigramaEntidad WHERE SUBSTRING(cast(IdOrganigramaEntidad as CHAR),0,3) = SAC.dbo.fnDevuelveIdPrefijoInt()
			
			set @cadena_respuesta1 = 'SELECT p' + @var_name_campo + ' AS id' + substring(@var_name_campo, 3, len(@var_name_campo)-1)
			set @var_cadena_pe3 = 'WHERE ' + @var_name_campo + '=' + 'p' + @var_name_campo --usa el primer campo para actualizar o borrar
			set @var_Contador = @var_contador +1
		end
		
			set @var_cadena_pe=@var_cadena_pe
			if (@var_name_campo NOT IN ( 'FechaRegistro','FilaEstado'))
			BEGIN
			set @var_cadena = @var_cadena + @var_name_campo + ', ' -- inserta
--CON TIPOS DE CAMPO
--			set @var_cadena_pe2_i =  @var_cadena_pe2_i + '@pe_' + substring(@var_name_xtype,1,1) + '_'+ @var_name_campo + ', '  --inserta
			set @var_cadena_pe2_i =  @var_cadena_pe2_i + 'p' + @var_name_campo + ', '  --inserta
			END
--CON TIPOS DE CAMPO
--			set @var_cadena_pe2 = @var_cadena_pe2 + @var_name_campo + '=' + '@pe_' + substring(@var_name_xtype,1,1) + '_' + @var_name_campo + ', ' -- actualiza
			set @var_cadena_pe2 = @var_cadena_pe2 + @var_name_campo + '=' + 'p' + @var_name_campo + ', ' -- actualiza
		

		FETCH NEXT FROM campos_Cursor into @var_name_campo, @var_name_xtype, @var_length
	END
	CLOSE campos_Cursor
	DEALLOCATE campos_Cursor
   print '(IN pTipo VARCHAR(1),'+ substring(@var_cadena_pe, 2, len(@var_cadena_pe)) + ')'
   --print  'WITH ENCRYPTION'
   print  'begin'
   print '	IF pTipo='+''''+'C'+''''+' then  '
   --print '	'+@cadena_respuesta   
   print '	SET pid'+@var_nombretabla+' = (SELECT  (IFNULL(MAX(id'+@var_nombretabla+') + 1,1)) FROM '+@var_name+');'
   print '	INSERT INTO ' + @var_name + '(' + substring(@var_cadena, 1, len(@var_cadena)-1) + ',fecharegistro,estadoregistro'+ ')'+'	values ('+ substring(@var_cadena_pe2_i, 1, len(@var_cadena_pe2_i)-1)+',NOW(),1);'  
   print '	'+@cadena_respuesta1 + ';'
   print '	END IF;'  
   print ' '
   print '	IF pTipo='+''''+'R'+''''+' then  '
   print '	SELECT  ' + substring(@var_cadena,0,len(@var_cadena)) + '	from  '+ @var_name +' ' +@var_cadena_pe3+';'--+ ' where FilaEstado = @dato or FilaEstado = 1' --+ @var_cadena_pe3 + ''
   print '	END IF;'
   print ' '
    print '	IF pTipo='+''''+'U'+''''+' then  '
   print '	UPDATE ' + @var_name + ' set ' + substring(@var_cadena_pe2, 1, len(@var_cadena_pe2)-1)  + '	' + @var_cadena_pe3  + ';'
   print '	'+@cadena_respuesta1 +';'
   print '	END IF;'
   print '	END$$'
   FETCH NEXT FROM tablas_Cursor into @var_name, @var_id
END
CLOSE tablas_Cursor
DEALLOCATE tablas_Cursor
GO
--cerramos porcedimiento generico

